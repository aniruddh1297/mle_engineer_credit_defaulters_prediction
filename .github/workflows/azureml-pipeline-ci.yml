name: Azure ML Multi-Env Pipeline CI

on:
  push:
    branches:
      - release/dev
      - release/test
      - main
    paths:
      - "component_code/**.yaml"
      - "component_code/**.py"
      - "pipeline/run_pipeline.py"
      - "register_scripts/**.py"
      - "promote_model.py"
      - "serve/deploy_endpoint.py"
      - "config/**.json"
      - "requirements.txt"
      - ".github/workflows/azureml-pipeline-ci.yml"

jobs:
  checkout-and-setup:
    runs-on: ubuntu-latest
    outputs:
      commit_message: ${{ steps.get_commit.outputs.message }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get last commit message
        id: get_commit
        run: |
          {
            echo "message<<EOF"
            git log -1 --pretty=%B
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

  register:
    needs: checkout-and-setup
    runs-on: ubuntu-latest
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_WORKSPACE_NAME_DEV: ${{ secrets.AZURE_WORKSPACE_NAME_DEV }}
      AZURE_WORKSPACE_NAME_TEST: ${{ secrets.AZURE_WORKSPACE_NAME_TEST }}
      AZURE_WORKSPACE_NAME_PROD: ${{ secrets.AZURE_WORKSPACE_NAME_PROD }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install azure-ai-ml azure-identity
      - name: 🔐 Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Register Environment
        run: |
          python register_scripts/register_env.py --env ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'release/test' && 'test' || 'dev' }}
      - name: Register Azure ML Components
        run: |
          python register_scripts/register_component.py --env ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'release/test' && 'test' || 'dev' }}

  run-pipeline:
    needs: register
    runs-on: ubuntu-latest
    if: github.ref_name != 'main' && (github.ref_name != 'release/dev' || contains(needs.checkout-and-setup.outputs.commit_message, 'pipeline-start'))
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_WORKSPACE_NAME_DEV: ${{ secrets.AZURE_WORKSPACE_NAME_DEV }}
      AZURE_WORKSPACE_NAME_TEST: ${{ secrets.AZURE_WORKSPACE_NAME_TEST }}
      AZURE_WORKSPACE_NAME_PROD: ${{ secrets.AZURE_WORKSPACE_NAME_PROD }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Debug ENV values
        run: |
          echo "SUBSCRIPTION = $AZURE_SUBSCRIPTION_ID"
          echo "RESOURCE GROUP = $AZURE_RESOURCE_GROUP"
          echo "WORKSPACE_DEV = $AZURE_WORKSPACE_NAME_DEV"
          echo "WORKSPACE_TEST = $AZURE_WORKSPACE_NAME_TEST"
          echo "WORKSPACE_PROD = $AZURE_WORKSPACE_NAME_PROD"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install azure-ai-ml azure-identity
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Run Azure ML Pipeline (Dev/Test)
        run: |
          python pipeline/run_pipeline.py --env ${{ github.ref_name == 'release/test' && 'test' || 'dev' }}

  promote:
    needs: register
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' && !contains(needs.checkout-and-setup.outputs.commit_message, 'prod-run')
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_WORKSPACE_NAME_DEV: ${{ secrets.AZURE_WORKSPACE_NAME_DEV }}
      AZURE_WORKSPACE_NAME_TEST: ${{ secrets.AZURE_WORKSPACE_NAME_TEST }}
      AZURE_WORKSPACE_NAME_PROD: ${{ secrets.AZURE_WORKSPACE_NAME_PROD }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install azure-ai-ml azure-identity
      - name: 🔐 Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Promote model to prod
        run: |
          python promote_scripts/promote_model.py

  run-prod-pipeline:
    needs: register
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' && contains(needs.checkout-and-setup.outputs.commit_message, 'prod-run')
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_WORKSPACE_NAME_DEV: ${{ secrets.AZURE_WORKSPACE_NAME_DEV }}
      AZURE_WORKSPACE_NAME_TEST: ${{ secrets.AZURE_WORKSPACE_NAME_TEST }}
      AZURE_WORKSPACE_NAME_PROD: ${{ secrets.AZURE_WORKSPACE_NAME_PROD }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install azure-ai-ml azure-identity
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Run full Azure ML Pipeline in prod
        run: |
          python pipeline/run_pipeline.py --env prod

  deploy:
    runs-on: ubuntu-latest
    needs: [promote, run-prod-pipeline]
    if: >
      always() &&
      (
        needs.promote.result == 'success' ||
        (contains(needs, 'run-prod-pipeline') && needs.run-prod-pipeline.result == 'success')
      )
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_WORKSPACE_NAME_DEV: ${{ secrets.AZURE_WORKSPACE_NAME_DEV }}
      AZURE_WORKSPACE_NAME_TEST: ${{ secrets.AZURE_WORKSPACE_NAME_TEST }}
      AZURE_WORKSPACE_NAME_PROD: ${{ secrets.AZURE_WORKSPACE_NAME_PROD }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install azure-ai-ml azure-identity
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to endpoint
        run: |
          python serve/deploy_endpoint.py --env prod

